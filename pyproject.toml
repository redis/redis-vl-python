[tool.poetry]
name = "redisvl"
version = "0.4.1"
description = "Python client library and CLI for using Redis as a vector database"
authors = ["Redis Inc. <applied.ai@redis.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/redis/redis-vl-python"
repository = "https://github.com/redis/redis-vl-python"
documentation = "https://docs.redisvl.com"
keywords = ["ai", "redis", "redis-client", "vector-database", "vector-search"]
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
]
packages = [{ include = "redisvl", from = "." }]

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
numpy = [
  { version = "^1", python = "<3.12" },
  { version = ">=1.26.0,<3", python = ">=3.12" },
]
pyyaml = ">=5.4,<7.0"
coloredlogs = "^15.0"
redis = "^5.0"
pydantic = "^2"
tenacity = ">=8.2.2"
tabulate = "^0.9.0"
ml-dtypes = "^0.4.0"
python-ulid = "^3.0.0"
openai = { version = "^1.13.0", optional = true }
sentence-transformers = { version = "^3.4.0", optional = true }
scipy = [
  { version = "<1.15", python = "<3.10", optional = true },
  { version = "^1.15", python = ">=3.10", optional = true }
]
google-cloud-aiplatform = { version = "^1.26", optional = true }
protobuf = { version = "^5.29.1", optional = true }
cohere = { version = ">=4.44", optional = true }
mistralai = { version = ">=1.0.0", optional = true }
voyageai = { version = ">=0.2.2", optional = true }
boto3 = { version = "^1.36.0", optional = true, extras = ["bedrock"] }

[tool.poetry.extras]
openai = ["openai"]
sentence-transformers = ["sentence-transformers", "scipy"]
vertexai = ["google_cloud_aiplatform", "protobuf"]
cohere = ["cohere"]
mistralai = ["mistralai"]
voyageai = ["voyageai"]
bedrock = ["boto3"]

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^5.6.4"
pylint = "^3.1.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
pytest-xdist = {extras = ["psutil"], version = "^3.6.1"}
pre-commit = "^4.1.0"
mypy = "1.9.0"
nbval = "^0.11.0"
types-redis = "*"
types-pyyaml = "*"
types-tabulate = "*"
testcontainers = "^4.3.1"
cryptography = { version = ">=44.0.1", markers = "python_version > '3.9.1'" }

[tool.poetry.group.docs.dependencies]
sphinx = ">=4.4.0"
pydata-sphinx-theme = "^0.15.2"
nbsphinx = "^0.9.3"
jinja2 = "^3.1.3"
sphinx-copybutton = "^0.5.2"
sphinx-favicon = "^1.0.1"
sphinx-design = "^0.5.0"
myst-nb = "^1.1.0"

[tool.poetry.scripts]
rvl = "redisvl.cli.runner:main"
format = "scripts:format"
check-format = "scripts:check_format"
sort-imports = "scripts:sort_imports"
check-sort-imports = "scripts:check_sort_imports"
check-lint = "scripts:check_lint"
check-mypy = "scripts:check_mypy"
test = "scripts:test"
test-verbose = "scripts:test_verbose"
test-notebooks = "scripts:test_notebooks"
build-docs = "scripts:build_docs"
serve-docs = "scripts:serve_docs"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
exclude = '''
(
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | setup.py
)
'''

[tool.pytest.ini_options]
log_cli = true
asyncio_mode = "auto"

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
