[tool.poetry]
name = "redisvl"
version = "0.3.5"
description = "Python client library and CLI for using Redis as a vector database"
authors = ["Redis Inc. <applied.ai@redis.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/redis/redis-vl-python"
repository = "https://github.com/redis/redis-vl-python"
documentation = "https://www.redisvl.com"
keywords = ["ai", "redis", "redis-client", "vector-database", "vector-search"]
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
]
packages = [{ include = "redisvl", from = "." }]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = "*"
pyyaml = "*"
coloredlogs = "*"
redis = ">=5.0.0"
pydantic = { version = ">=2,<3" }
tenacity = ">=8.2.2"
tabulate = { version = ">=0.9.0,<1" }
ml-dtypes = "^0.4.0"
openai = { version = ">=1.13.0", optional = true }
sentence-transformers = { version = ">=2.2.2", optional = true }
google-cloud-aiplatform = { version = ">=1.26", optional = true }
cohere = { version = ">=4.44", optional = true }
mistralai = { version = ">=0.2.0", optional = true }

[tool.poetry.extras]
openai = ["openai"]
sentence-transformers = ["sentence-transformers"]
google_cloud_aiplatform = ["google_cloud_aiplatform"]
cohere = ["cohere"]
mistralai = ["mistralai"]

[tool.poetry.group.dev.dependencies]
black = ">=20.8b1"
isort = ">=5.6.4"
pylint = "3.1.0"
pytest = "8.1.1"
pytest-cov = "5.0.0"
pytest-asyncio = "0.23.6"
mypy = "1.9.0"
types-redis = "*"
types-pyyaml = "*"
types-tabulate = "*"
treon = "*"

[tool.poetry.group.test.dependencies]
testcontainers = "^4.3.1"

[tool.poetry.group.docs.dependencies]
sphinx = ">=4.4.0"
pydata-sphinx-theme = "^0.15.2"
nbsphinx = "^0.9.3"
jinja2 = "^3.1.3"
sphinx-copybutton = "^0.5.2"
sphinx-favicon = "^1.0.1"
sphinx-design = "^0.5.0"
myst-nb = "^1.1.0"

[tool.poetry.scripts]
rvl = "redisvl.cli.runner:main"
format = "scripts:format"
check-format = "scripts:check_format"
sort-imports = "scripts:sort_imports"
check-sort-imports = "scripts:check_sort_imports"
check-lint = "scripts:check_lint"
mypy = "scripts:mypy"
test = "scripts:test"
test-verbose = "scripts:test_verbose"
test-cov = "scripts:test_cov"
cov = "scripts:cov"
test-notebooks = "scripts:test_notebooks"
build-docs = "scripts:build_docs"
serve-docs = "scripts:serve_docs"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py38', 'py39', 'py310', 'py311']
exclude = '''
(
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | setup.py
)
'''

[tool.pytest.ini_options]
log_cli = true
asyncio_mode = "auto"

[tool.coverage.run]
source = ["redisvl"]

[tool.coverage.report]
ignore_errors = true

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
