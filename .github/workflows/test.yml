name: Test Suite

on:
  pull_request:

  push:
    branches:
      - main

  schedule:
    - cron: "0 2 * * *"  # 2 AM UTC nightly
  
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.8.3"

jobs:
  test:
    name: Python ${{ matrix.python-version }} - ${{ matrix.connection }} [redis ${{ matrix.redis-version }}]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, '3.10', 3.11, 3.12, 3.13]
        connection: ['hiredis', 'plain']
        redis-version: ['6.2.6-v9', 'latest', '8.0-M03']

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        run: |
          poetry install --all-extras

      - name: Install hiredis if needed
        if: matrix.connection == 'hiredis'
        run: |
          poetry add hiredis

      - name: Set Redis image name
        run: |
          if [[ "${{ matrix.redis-version }}" == "8.0-M03" ]]; then
            echo "REDIS_IMAGE=redis:${{ matrix.redis-version }}" >> $GITHUB_ENV
          else
            echo "REDIS_IMAGE=redis/redis-stack-server:${{ matrix.redis-version }}" >> $GITHUB_ENV
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Run tests
        if: matrix.connection == 'plain' && matrix.redis-version == 'latest'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          GCP_LOCATION: ${{ secrets.GCP_LOCATION }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
          AZURE_OPENAI_API_KEY: ${{secrets.AZURE_OPENAI_API_KEY}}
          AZURE_OPENAI_ENDPOINT: ${{secrets.AZURE_OPENAI_ENDPOINT}}
          AZURE_OPENAI_DEPLOYMENT_NAME: ${{secrets.AZURE_OPENAI_DEPLOYMENT_NAME}}
          OPENAI_API_VERSION: ${{secrets.OPENAI_API_VERSION}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          make test-all

      - name: Run tests
        if: matrix.connection != 'plain' || matrix.redis-version != 'latest'
        run: |
          make test

      - name: Run notebooks
        if: matrix.connection == 'plain' && matrix.redis-version == 'latest'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          GCP_LOCATION: ${{ secrets.GCP_LOCATION }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
          AZURE_OPENAI_API_KEY: ${{secrets.AZURE_OPENAI_API_KEY}}
          AZURE_OPENAI_ENDPOINT: ${{secrets.AZURE_OPENAI_ENDPOINT}}
          AZURE_OPENAI_DEPLOYMENT_NAME: ${{secrets.AZURE_OPENAI_DEPLOYMENT_NAME}}
          OPENAI_API_VERSION: ${{secrets.OPENAI_API_VERSION}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          docker run -d --name redis -p 6379:6379 redis/redis-stack-server:latest
          make test-notebooks 

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
  
      - name: Install dependencies
        run: |
          poetry install --all-extras

      - name: Build docs
        run: |
          make docs-build 